{"id":"node_modules/olgm/asserts.js","dependencies":[{"name":"D:\\Geoportali\\Vjezbe\\GIGS 6\\node_modules\\olgm\\asserts.js.map","includedInParent":true,"mtime":499162500000},{"name":"D:\\Geoportali\\Vjezbe\\GIGS 6\\package.json","includedInParent":true,"mtime":1595070648834},{"name":"D:\\Geoportali\\Vjezbe\\GIGS 6\\node_modules\\olgm\\package.json","includedInParent":true,"mtime":1607280595897}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assert = assert;\n\n/**\n * @module olgm/asserts\n */\n\n/* Based on https://github.com/openlayers/openlayers/blob/master/src/ol/asserts.js */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy\n * @param {string=} opt_message Error message in case of failure\n */\nfunction assert(assertion, opt_message) {\n  if (!assertion) {\n    var message = 'Assertion failed';\n\n    if (opt_message) {\n      message += ': ' + opt_message;\n    }\n\n    throw new Error(message);\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":9,"column":7},"generated":{"line":18,"column":0}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":9,"column":16},"generated":{"line":18,"column":9}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":9,"column":7},"generated":{"line":18,"column":15}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":9,"column":23},"generated":{"line":18,"column":16}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":9,"column":7},"generated":{"line":18,"column":25}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":9,"column":34},"generated":{"line":18,"column":27}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":9,"column":7},"generated":{"line":18,"column":38}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":9,"column":47},"generated":{"line":18,"column":40}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":10,"column":2},"generated":{"line":19,"column":0}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":10,"column":6},"generated":{"line":19,"column":6}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":10,"column":7},"generated":{"line":19,"column":7}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":10,"column":2},"generated":{"line":19,"column":16}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":10,"column":18},"generated":{"line":19,"column":18}},{"source":"../../src/olgm/asserts.js","name":"let","original":{"line":11,"column":4},"generated":{"line":20,"column":0}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":11,"column":8},"generated":{"line":20,"column":8}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":11,"column":15},"generated":{"line":20,"column":15}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":11,"column":18},"generated":{"line":20,"column":18}},{"source":"../../src/olgm/asserts.js","name":"let","original":{"line":11,"column":4},"generated":{"line":20,"column":36}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":12,"column":4},"generated":{"line":22,"column":0}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":12,"column":8},"generated":{"line":22,"column":8}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":12,"column":4},"generated":{"line":22,"column":19}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":12,"column":21},"generated":{"line":22,"column":21}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":13,"column":6},"generated":{"line":23,"column":0}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":13,"column":6},"generated":{"line":23,"column":6}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":13,"column":13},"generated":{"line":23,"column":13}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":13,"column":17},"generated":{"line":23,"column":17}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":13,"column":24},"generated":{"line":23,"column":24}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":13,"column":6},"generated":{"line":23,"column":35}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":14,"column":5},"generated":{"line":24,"column":0}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":15,"column":4},"generated":{"line":26,"column":0}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":15,"column":10},"generated":{"line":26,"column":10}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":15,"column":14},"generated":{"line":26,"column":14}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":15,"column":10},"generated":{"line":26,"column":19}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":15,"column":20},"generated":{"line":26,"column":20}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":15,"column":10},"generated":{"line":26,"column":27}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":15,"column":4},"generated":{"line":26,"column":28}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":16,"column":3},"generated":{"line":27,"column":0}},{"source":"../../src/olgm/asserts.js","name":null,"original":{"line":17,"column":1},"generated":{"line":28,"column":0}}],"sources":{"../../src/olgm/asserts.js":"/**\n * @module olgm/asserts\n */\n/* Based on https://github.com/openlayers/openlayers/blob/master/src/ol/asserts.js */\n/**\n * @param {*} assertion Assertion we expected to be truthy\n * @param {string=} opt_message Error message in case of failure\n */\nexport function assert(assertion, opt_message) {\n  if (!assertion) {\n    let message = 'Assertion failed';\n    if (opt_message) {\n      message += ': ' + opt_message;\n    }\n    throw new Error(message);\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"145b967b068d4ae03b7d370c9476c35c","cacheData":{"env":{}}}